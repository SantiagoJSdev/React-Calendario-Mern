{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","actions/iu.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","calendar.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConnToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdate","eventDelete","eventLoaded","login","user","checkingFinish","startLogaut","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","console","log","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","NavBar","useSelector","state","auth","onClick","CalendarEvent","title","iuOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleinput","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Calendar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf646c03.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n//el endpoint al que va dirigido, la data que se envia, y el metodo q se utiliza \r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url =`${baseUrl}/${endpoint}`;\r\n//en caso q el method sea get va directo y si es alguno otro lo especificamos x el sino\r\n    if (method === 'GET') {\r\n        return fetch(url)\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                //es de este tipo estamos trabajando con mongodb \r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)//la data hay q convertirla a formato json\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchConnToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url =`${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n//en caso q el method sea get va directo y si es alguno otro lo especificamos x el sino\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                //es de este tipo estamos trabajando con mongodb \r\n                'content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)//la data hay q convertirla a formato json\r\n        })\r\n    }\r\n}","\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventAddNew: '[event] Add new',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventeSetActive: '[event] Set Active',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event update',\r\n    eventDelete: '[event] Event delete',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventLogaut: '[event] event logaut',\r\n\r\n \r\n    authCheckingFinish: '[auth] Finish Checkin login state',\r\n    authStartLogin: '[auth] start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenReNew: '[auth] Start Token renew',\r\n    authLogaut: '[auth] Logaut'\r\n}","import moment from \"moment\"\r\n\r\nexport const prepareEvents = (events) =>{\r\n\r\n\r\n\r\n    return events.map((e)=>({\r\n        ...e,\r\n        end: moment(e.end).toDate(), /// convierte la fecha string con moment y conviertela en una fecha javascript\r\n        start:moment(e.start).toDate()\r\n    }))\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchConnToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const eventStartAddNew = (event)=>{\r\n\r\n    return async(dispatch, getState)=>{\r\n        // creo mi accion asincrona la cual llama a el helper mi fech con fetchSinTokenla cual llama a \r\n        // mi endpoint para que realice la grabacion bd\r\n        const {uid, name} = getState().auth\r\n        try {\r\n            const resp = await fetchConnToken('events', event, 'POST');\r\n            const body = await resp.json(); //en el body obtengo el evento ya grabado\r\n            console.log(body)\r\n            if (body.ok) {\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n\r\n            }\r\n            \r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n            \r\n        }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n const eventAddNew =(event)=>{\r\n\r\n    return {\r\n        type: types.eventAddNew,\r\n        payload: event\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const eventeSetActive =(event)=>{\r\n\r\n    return {\r\n        type: types.eventeSetActive,\r\n        payload: event\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const eventClearActiveEvent =()=>({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\n\r\n\r\nexport const eventStartUpdate = (event) =>{\r\n\r\n    return async(dispatch)=>{\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConnToken(`events/${event.id}`, event, 'PUT')\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n\r\n                dispatch(eventUpdate(event))\r\n            }else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdate =(event)=>{\r\n\r\n    return {\r\n        type: types.eventUpdate,\r\n        payload: event\r\n    }\r\n}\r\n\r\n\r\nexport const eventStartDelete=()=>{\r\n    return async(dispatch,getState)=>{\r\n\r\n        const {id}= getState().calendar.activeEvent\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConnToken(`events/${id}`, {}, 'DELETE')\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n\r\n                dispatch(eventDelete())\r\n            }else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const eventDelete =()=>({\r\n    type: types.eventDelete\r\n})\r\n\r\nexport const eventStartLoading =()=>{\r\n    return async(dispatch)=>{\r\n\r\n        try {\r\n\r\n            const resp = await fetchConnToken('events')\r\n            const body = await resp.json()\r\n            const events = prepareEvents(body.evento)\r\n           \r\n            //aqui extraigo la lista de mis evento de la base de datos\r\n            //aqui recibimos los eventos pero las fechas vienen como string\r\n            dispatch(eventLoaded(events))\r\n\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst eventLoaded = (events) => {\r\n\r\nreturn {\r\n    type: types.eventLoaded,\r\n    payload: events\r\n}\r\n\r\n\r\n}\r\n\r\nexport const eventLogaut =()=>({type:types.eventLogaut})","import Swal from \"sweetalert2\";\r\nimport { fetchConnToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogaut } from \"./events\";\r\n\r\n\r\n\r\nexport const starLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n \r\n             \r\n            \r\n       const resp = await fetchSinToken('auth', {email,password}, 'POST');\r\n       const body = await resp.json();\r\n       console.log(body)\r\n\r\n       if (body.ok) {\r\n\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(login({\r\n            uid: body.uid,\r\n            name: body.name\r\n        }\r\n\r\n        ))\r\n       } else {\r\n           Swal.fire('Error', body.msg, 'error')\r\n       }\r\n\r\n}\r\n}\r\n\r\nexport const starRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n \r\n             \r\n            \r\n       const resp = await fetchSinToken('auth/new', {email,password,name}, 'POST');\r\n       const body = await resp.json();\r\n       console.log(body)\r\n\r\n       if (body.ok) {\r\n\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(login({\r\n            uid: body.uid,\r\n            name: body.name\r\n        }\r\n\r\n        ))\r\n       } else {\r\n           Swal.fire('Error', body.msg, 'error')\r\n       }\r\n\r\n}\r\n}\r\n\r\nconst login = (user) => {\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    }\r\n\r\n}\r\n\r\n//con esta accion revalidamos token y ponemos en el estado el checking en falso\r\n//cargando informacion de user q este activo cuando actualice la informacion en el store\r\nexport const startChecking = () => {\r\n    return async(dispatch)=>{\r\n\r\n\r\n                 \r\n       const resp = await fetchConnToken('auth/renew');\r\n       const body = await resp.json();\r\n       \r\n\r\n       if (body.ok) {\r\n\r\n        localStorage.setItem('token', body.token);\r\n        localStorage.setItem('token-init-date', new Date().getTime());\r\n        dispatch(login({\r\n            uid: body.uid,\r\n            name: body.name\r\n        }\r\n\r\n        ))\r\n       } else {\r\n          dispatch(checkingFinish())\r\n       }\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst checkingFinish =()=>({type: types.authCheckingFinish})\r\n\r\nexport const startLogaut = () => {\r\n    return (dispatch)=>{\r\n\r\n        localStorage.clear();\r\n        dispatch(eventLogaut())\r\n        dispatch(logout())\r\n    }\r\n\r\n}\r\n\r\nexport const logout= () => ({type:types.authLogaut})","\r\n\r\n\r\n\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { starLogin, starRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\r\n        \r\n        lEmail: \"fernando@gmail.com\",\r\n        lPassword: \"125556\"\r\n    } );\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\r\n        \r\n        rName: 'nando',\r\n        rEmail: \"nando@gmail.com\",\r\n        rPassword1: \"125556\",\r\n        rPassword2: \"125556\"\r\n    } );\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const {lEmail, lPassword} = formLoginValues\r\n    \r\n    const landleLogin =(e)=>{\r\n        \r\n        e.preventDefault()\r\n       \r\n        dispatch(starLogin(lEmail,lPassword))\r\n        \r\n    }\r\n    const handleRegister=(e)=>{\r\n\r\n        e.preventDefault()\r\n\r\n        if (rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n       dispatch(starRegister(rEmail,rPassword1,rName)) \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={landleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name =   \"lPassword\"\r\n                                value = {lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name='rPassword1'\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name='rPassword2'\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogaut } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const handleSalir= () =>{\r\n        dispatch(startLogaut())\r\n    }\r\n\r\n    const {name} = useSelector( state => state.auth );\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n                </span>\r\n\r\n                <button \r\n                onClick={handleSalir}\r\n                \r\n                className=\"btn btn-outline-danger\">\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    <span> Salir</span>\r\n                </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n   \r\n    const {title, user } = event;\r\n   \r\n   \r\n   \r\n    return (\r\n        <div>\r\n            <span> {title} </span>\r\n            <strong>- {user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const iuOpenModal =()=>{\r\n  \r\n    \r\n    return {\r\n        type: types.uiOpenModal,\r\n        payload: true\r\n    }  \r\n}\r\n\r\nexport const iuClosenModal =()=>{\r\n\r\n    return {\r\n        type: types.uiCloseModal,\r\n        payload: false\r\n    }\r\n\r\n\r\n\r\n}","\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iuClosenModal } from '../../actions/iu';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n  Modal.setAppElement('#root');\r\n\r\n  const now = moment().minutes(0).seconds(0).add(1, 'hours');\r\n  const nowPlus1 = now.clone().add(1, 'hours');\r\n\r\n\r\n  const initEvent =   {\r\n      title: '',\r\n      notes: '',\r\n      start:now.toDate(),\r\n      end:nowPlus1.toDate()\r\n    }\r\n  \r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {modalOpen} = useSelector( state => state.ui );\r\n  const {activeEvent} = useSelector( state => state.calendar );\r\n  const [dateStart, setDateStart] = useState(now.toDate())\r\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\r\n  const [titleValid, setTitleValid] = useState(true)\r\n  const [formValues, setFormValues] = useState(initEvent)\r\n  const {notes, title, start, end} = formValues;\r\n\r\n  useEffect(() => {\r\n      // console.log(activeEvent)\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent)\r\n    } else {\r\n      setFormValues(initEvent)\r\n    }\r\n    \r\n  }, [activeEvent,setFormValues])\r\n\r\n  const handleinput = ({target}) => {\r\n\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n  \r\nconst closeModal=()=>{\r\n  dispatch(iuClosenModal())\r\n  dispatch(eventClearActiveEvent())\r\n  setFormValues(initEvent)\r\n  \r\n}\r\n\r\nconst handleStartDateChange=(e)=>{\r\n  setDateStart(e);\r\n  setFormValues({\r\n    ...formValues,\r\n    start: e\r\n  })\r\n}\r\n\r\nconst handleEndDateChange=(e)=>{\r\n  setDateEnd(e);\r\n  setFormValues({\r\n    ...formValues,\r\n    end: e\r\n  })\r\n}\r\n\r\nconst handleSubmitForm = (e) =>{\r\n  e.preventDefault();\r\n \r\n  const momentStart = moment(start);\r\n  const momentEnd = moment(end);\r\n\r\n  if (momentStart.isSameOrAfter(momentEnd)) { \r\n  Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\r\n  return;\r\n  }\r\n  if (title.trim().length < 2) {\r\n  \r\n  return setTitleValid(false)\r\n  }\r\n  if (activeEvent){\r\n    dispatch(eventStartUpdate(formValues))\r\n  } else {\r\n    dispatch(eventStartAddNew({\r\n      ...formValues\r\n      \r\n    }))\r\n  }\r\n \r\n\r\n  setTitleValid(true);\r\n  closeModal();\r\n}\r\n\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={ closeModal }\r\n        style={customStyles}\r\n        closeTimeoutMS={ 200 }\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n                          \r\n      >\r\n        <h1>{(activeEvent)?'Editar Nota': 'Nota Nueva'}</h1>\r\n        <hr></hr>\r\n   \r\n  <form \r\n  onSubmit={ handleSubmitForm}\r\n  className=\"container\">\r\n\r\n    <div className=\"form-group\">\r\n        <label>Fecha y hora inicio</label>\r\n        <DateTimePicker\r\n        onChange={handleStartDateChange}\r\n        value={dateStart}\r\n        className='form-control'\r\n      />\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n        <label>Fecha y hora fin</label>\r\n        <DateTimePicker\r\n        onChange={handleEndDateChange}\r\n        value={dateEnd}\r\n        minDate={dateStart}\r\n        className='form-control'\r\n      />\r\n    </div>\r\n\r\n    <hr />\r\n    <div className=\"form-group\">\r\n        <label>Titulo y notas</label>\r\n        <input \r\n            type=\"text\" \r\n            className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleinput}\r\n        />\r\n        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n        <textarea \r\n            type=\"text\" \r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleinput}\r\n        ></textarea>\r\n        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n    </div>\r\n\r\n    <button\r\n        type=\"submit\"\r\n        className=\"btn btn-outline-primary btn-block\"\r\n    >\r\n        <i className=\"far fa-save\"></i>\r\n        <span> Guardar</span>\r\n    </button>\r\n\r\n</form>\r\n          \r\n          </Modal>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { iuOpenModal } from '../../actions/iu';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleClick = ()=>{\r\n\r\n        dispatch(iuOpenModal())\r\n    }\r\n    return (\r\n        <button\r\n        onClick={handleClick}\r\n        className='btn btn-primary fab'\r\n        \r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {  eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n        const dispatch = useDispatch();\r\n    const handleDelete =()=>{\r\n        dispatch(eventStartDelete())\r\n    }\r\n    return (\r\n        <button\r\n        onClick={handleDelete}\r\n        className=\"btn btn-danger fab-danger\"\r\n        >\r\n        <i className=\"fas fa-trash\"></i>\r\n        <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { NavBar } from \"../ui/NavBar\"\r\n\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { useState } from 'react';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { iuOpenModal } from '../../actions/iu';\r\nimport {  eventClearActiveEvent, eventeSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {events, activeEvent} = useSelector( state => state.calendar );\r\n    const {uid} = useSelector( state => state.auth );\r\n    \r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [])\r\n\r\n\r\n    const onDoubleClick=(e)=>{\r\n        dispatch(iuOpenModal())\r\n    }\r\n\r\n    const onSelectEvent=(e)=>{\r\n      \r\n        dispatch(eventeSetActive(e))\r\n      \r\n    }\r\n\r\n    const onViewChange=(e)=>{\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n    const onSelectSlot =(e)=>{\r\n\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n\r\nconst eventStyleGetter =(event, start, end, isSelected) => {\r\n\r\n    const style = {\r\n        backgroundColor:(uid === event.user._id) ? '#367CF7' : '#464646',\r\n        borderRadius: '0px',\r\n        opacity: 0.8,\r\n        display: 'block',\r\n        color: 'white'\r\n    }\r\n\r\n    return {\r\n        style\r\n    }\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"calender-screen\">\r\n            <NavBar/>\r\n\r\n            <Calendar\r\n      localizer={localizer}\r\n      events={events}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      messages={messages}\r\n      eventPropGetter={eventStyleGetter}\r\n      onDoubleClickEvent={onDoubleClick}\r\n      onSelectEvent={onSelectEvent}\r\n      onView={onViewChange}\r\n      onSelectSlot ={onSelectSlot}\r\n      selectable={true}\r\n      view={lastView}\r\n      components={{\r\n          event: CalendarEvent\r\n      }}\r\n             />\r\n            <AddNewFab/>\r\n            {\r\n            (activeEvent)\r\n            && <DeleteEventFab/>\r\n            }\r\n            \r\n             <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n   \n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","\r\n\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n\r\n \r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const {checking, uid} = useSelector( state => state.auth );\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking())\r\n  }, [dispatch])\r\n\r\n  if (checking){\r\n    return (\r\n      <h3>Espere..</h3>\r\n    )\r\n  }\r\n    return (\r\n             <Router>\r\n                    <div>\r\n\r\n                    <Switch>\r\n\r\n                         <PublicRoute\r\n                         \r\n                         exact \r\n                         path=\"/login\" \r\n                         component={LoginScreen}\r\n                         isAuthenticated = {!!uid}\r\n                         />\r\n                         \r\n                      \r\n                         \r\n                         \r\n                          <PrivateRoute \r\n                          exact\r\n                           path=\"/\" \r\n                           component={CalendarScreen}\r\n                           isAuthenticated = {!!uid}\r\n                           />\r\n                          \r\n                       \r\n                      \r\n\r\n                           <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                    </div>\r\n                </Router>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n   \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid:null,\r\n    //name: null\r\n}\r\n\r\nexport const authReducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking:false,\r\n                ...action.payload\r\n            }\r\n            case types.authCheckingFinish:\r\n                return{\r\n                    ...state,\r\n                    checking:false\r\n                }\r\n                case types.authLogaut:\r\n                    return{\r\n                        checking: false\r\n                    }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n  \r\n}\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n\r\n//     notes: 'comprar pastel',\r\n//     user:{\r\n//         _id: 123,\r\n//         name: 'santiago'\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n\r\n}\r\n\r\nexport const calendarReducer = (state= initialState, action) => {\r\n  \r\n    switch (action.type) {\r\n\r\n        case types.eventeSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n         case types.eventClearActiveEvent:\r\n                    \r\n             return {\r\n                 ...state,\r\n                 activeEvent: null\r\n             }  \r\n\r\n             case types.eventUpdate:\r\n                    \r\n                return {\r\n                    ...state,\r\n                    events: state.events.map((e)=>{\r\n                     return  ( e.id === action.payload.id) \r\n                       ? action.payload\r\n                       : e\r\n                    })\r\n                }  \r\n    \r\n                case types.eventDelete:\r\n                    \r\n                    return {\r\n                        ...state,\r\n                        events: state.events.filter((e)=>{\r\n                         return  ( e.id !== state.activeEvent.id) \r\n                           \r\n                        }),\r\n                        activeEvent: null\r\n                    }\r\n                    \r\n                    case types.eventLoaded:\r\n                        return {\r\n                            ...state,\r\n                            events: [...action.payload]\r\n\r\n                        }\r\n\r\n                        case types.eventLogaut:\r\n                            return {\r\n                                ...initialState\r\n                            }\r\n    \r\n        default:\r\n         return   state;\r\n}\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: action.payload\r\n            }\r\n\r\n            case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer =combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(applyMiddleware(thunk)) \r\n    // composeEnhancers: window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    \r\n)","\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const Calendar = () => {\r\n    return (\r\n        <>\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n            </Provider>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Calendar } from './calendar';\nimport './styles.css'\n\nconsole.log(process.env)\nReactDOM.render(\n \n    <Calendar />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}